{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","text","FeedbackOptions","options","onLeaveFeedback","container","map","option","type","onClick","button","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","feedback","countTotalFeedback","Object","values","reduce","stateQuantity","keys","stateName","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,gBCA1ED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,sICsBlDC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAOC,KAArB,mBAAkCP,KAClC,oBAAGK,UAAWC,IAAOC,KAArB,sBAAqCN,KACrC,oBAAGI,UAAWC,IAAOC,KAArB,kBAAiCL,KACjC,oBAAGG,UAAWC,IAAOC,KAArB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAOC,KAArB,gCAA+CH,EAA/C,W,gBCoBSI,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,qBAAKL,UAAWC,IAAOK,UAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,QAAS,WACPL,EAAgBG,IAElBR,UAAWC,IAAOU,OANpB,SAQGH,GANIA,W,gBCKFI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASd,UAAWC,IAAOK,UAA3B,UACE,oBAAIN,UAAWC,IAAOY,MAAtB,SAA8BA,IAC7BC,MCEUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC6D3BC,MAxDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAEMC,EAAW,CAAE3B,OAAMC,UAASC,OAiB5B0B,EAAqB,kBACzBC,OAAOC,OAAOH,GAAUI,QACtB,SAAC5B,EAAO6B,GAAR,OAA0B7B,EAAQ6B,IAClC,IAMJ,OACE,qCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASoB,OAAOI,KAAKN,GACrBjB,gBA7BkB,SAAAwB,GACxB,OAAQA,GACN,IAAK,OACHV,EAAQxB,EAAO,GACf,MACF,IAAK,UACHyB,EAAWxB,EAAU,GACrB,MACF,IAAK,MACHyB,EAAOxB,EAAM,SAuBf,cAAC,EAAD,CAASgB,MAAM,aAAf,SACGU,IAAuB,EACtB,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBAjBRwB,IAAuBO,KAAKC,MAAc,IAAPpC,EAAc4B,KAAwB,IAoBnE,cAAC,EAAD,CAAcP,QAAQ,4BCnDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45ed16a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__Wou-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1qsGa\",\"button\":\"FeedbackOptions_button__1hAm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3wS01\",\"title\":\"Section_title__2zOOx\"};","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.text}>Good: {good}</p>\r\n      <p className={styles.text}>Neutral: {neutral}</p>\r\n      <p className={styles.text}>Bad: {bad}</p>\r\n      <p className={styles.text}>Total: {total}</p>\r\n      <p className={styles.text}>Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {options.map(option => (\r\n          <button\r\n            type=\"button\"\r\n            key={option}\r\n            onClick={() => {\r\n              onLeaveFeedback(option);\r\n            }}\r\n            className={styles.button}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad']))\r\n    .isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\r\n\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const feedback = { good, neutral, bad };\r\n\r\n  const incrementFeedback = stateName => {\r\n    switch (stateName) {\r\n      case 'good':\r\n        setGood(good + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(neutral + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(bad + 1);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () =>\r\n    Object.values(feedback).reduce(\r\n      (total, stateQuantity) => total + stateQuantity,\r\n      0,\r\n    );\r\n\r\n  const countPositiveFeedbackPercentage = () =>\r\n    countTotalFeedback() ? Math.round((good * 100) / countTotalFeedback()) : 0;\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Object.keys(feedback)}\r\n          onLeaveFeedback={incrementFeedback}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}